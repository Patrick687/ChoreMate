type Chore {
  id: ID!
  title: String!
  description: String
  group: Group!
  createdBy: User!
  createdAt: Date!
  isRecurring: Boolean!
  dueDate: Date
  status: ChoreStatus!
}

enum ChoreStatus {
  TODO
  IN_PROGRESS
  DONE
}

type Mutation {
  createChore(args: CreateChoreInput): Chore!
  updateChoreInfo(args: UpdateChoreInfoInput): Chore!
  updateChoreDueDate(args: UpdateChoreDueDateInput): Chore!
  updateChoreStatus(args: UpdateChoreStatusInput): Chore!
  deleteChore(args: DeleteChoreInput): Boolean!
}

input CreateChoreInput {
  title: String!
  description: String
  groupId: ID!
  isRecurring: Boolean!
}
input UpdateChoreInfoInput {
  choreId: ID!
  title: String
  description: String
}

input UpdateChoreDueDateInput {
  choreId: ID!
  dueDate: Date
}

input UpdateChoreStatusInput {
  choreId: ID!
  status: ChoreStatus!
}

input DeleteChoreInput {
  choreId: ID!
}

type Query {
  chores(groupId: ID!): [Chore!]!
  chore(id: ID!): Chore!
}
